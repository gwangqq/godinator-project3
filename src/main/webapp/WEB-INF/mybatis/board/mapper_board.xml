<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kitri.godinator.board.dao.BoardDao">
	
  	
  	
  	<!-- 학교 이름 찾기  -->
  	<select id="findHSchool" parameterType="String" resultType="String">
  		select distinct school_name schoolName
			from h_school
			where school_name like '%'||#{schoolName}||'%'
  	</select>
  	
  	<select id="findUSchool" parameterType="String" resultType="String">
  		select distinct name schoolName
			from u_school
			where name like '%'||#{schoolName}||'%'
  	</select>  
  	
  	<!-- 글 작성 완료  -->
  	<insert id="writeArticle" parameterType="BbsDto">
	insert all
		into board (BOARD_NO, B_USER_ID, BOARD_CATEGORY, USER_NAME, BOARD_SUBJECT, BOARD_CONTENT, B_SCHOOL_NAME, B_SCHOOL_CODE,
		B_SCHOOL_CATE1, B_SCHOOL_CATE2, REGION, B_VIEW_COUNT, DEL_STATUS, STATE, B_POSTDATE )
		values(#{boardNo}, #{bUserId}, #{boardCategory}, #{userName}, #{boardSubject}, #{boardContent}, #{bSchoolName}, null, null, null, #{region},  0, 0, 0, sysdate)
		
		into bbs (BBS_NO, BOARD_NO, SAVE_FOLDER, ORGINAL_NAME, SAVED_NAME, FILE_SIZE, LATITUDE, LONGITUDE)
		values (bbs_seq.nextval, #{boardNo}, #{saveFolder, jdbcType=VARCHAR}, #{orginalName, jdbcType=VARCHAR}, #{savedName, jdbcType=VARCHAR}, #{fileSize, jdbcType=VARCHAR}, #{latitude, jdbcType=INTEGER}, #{longitude, jdbcType=INTEGER})
	select * from dual
	
	</insert>
	
	<!-- list에 뿌려주기 -->
	<select id="listArticle" parameterType="map" resultType="bbsDto">
	select c.board_no boardNo, c.board_category boardCategory,c.b_user_id bUserId, c.board_subject boardSubject, c.b_school_name bSchoolName, c.b_view_count bViewCount, 
    decode(to_char(c.b_postdate ,'yymmdd'),
                    to_char(sysdate,'yymmdd'), to_char(c.b_postdate,'hh24:mi:ss'),
                    to_char(c.b_postdate ,'yy.mm.dd')) bPostdate, 
		    c.region region
		from
		    (
		    select rownum r, total.* 
		    from
		        (
		        select board_no,board_category, b_user_id, board_subject, b_school_name, b_view_count, b_postdate, region
		            from board
		            where del_status = 0 
		            and board_category = #{boardCategory}
		             <if test="word != null and word != ''" >
		            	<!-- 글 제목으로 검색 -->
		            	<if test="key == 'board_subject'">
		            		and board_subject like '%'||#{word}||'%'
		            	</if>
		            	<if test="key != 'board_subject'">
		            		and ${key} = #{word}
		            	</if>
		            	<!-- 작성자로 검색 -->
		            	<if test="key == 'b_user_id'">
		            		and b_user_id like '%'||#{word}||'%'
		            	</if>
		            	<if test="key != 'b_user_id'">
		            		and ${key} = #{word}
		            	</if>
		            	<!-- 학교 이름으로 검색하기 -->
		            	<!-- <if test="key == 'b_school_name'">
		            		and b_school_name like '%'||#{word}||'%'
		            	</if>
		            	<if test="key != 'b_school_name'">
		            		and ${key} = #{word}
		            	</if> -->
		            </if>
		            order by board_no DESC
		            ) total
		        where rownum &lt;= #{end}
		    )c
		where c.r &gt; #{start}
	</select> 
	
	<!-- 게시물 보기 -->
	<select id = "viewArticle" parameterType="int" resultType="bbsDto">
	select board_no boardNo, board_category boardCategory, b_user_id bUserId, board_subject boardSubject, board_content boardContent, b_school_name bSchoolName,
        decode(to_char(b_postdate ,'yymmdd'),
                    to_char(sysdate,'yymmdd'), to_char(b_postdate,'hh24:mi:ss'),
                    to_char(b_postdate ,'yy.mm.dd')) bPostdate, region region, b_view_count bViewCount
	from board
	where board_no = #{boardNo}
	</select>
	
	<!-- 글 수정 -->
	<update id="modifyArticle" parameterType="BbsDto">
		update board
		  set 
		     board_subject = #{boardSubject},
		     board_content = #{boardContent},
		     b_postdate = sysdate
		  where board_no = #{boardNo}
	</update>
	
	
	<!-- 이전 글 찾기 -->
	<select id="prevArticle" parameterType="map" resultType="int">
		select nvl(max(board_no), 0) result
			from board
			where board_no &lt; #{boardNo}
			and board_category = #{boardCategory}
			and del_status = 0
	</select>
	
	<!-- 다음 글 찾기  -->
	<select id="nextArticle" parameterType="map" resultType="int">
		select nvl(min(board_no), 0) result
			from board
			where board_no &gt; #{boardNo}
			and board_category = #{boardCategory}
			and del_status = 0
	</select>
	
	<!-- 글 삭제 -->
	<update id="deleteArticle">
		update board
			  set 
			     del_status = 1
			  where board_no = #{boardNo}
	</update>
</mapper>