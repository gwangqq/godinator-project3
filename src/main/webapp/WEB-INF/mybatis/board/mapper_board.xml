<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kitri.godinator.board.dao.BoardDao">
  	<select id="findHSchool" parameterType="String" resultType="String">
  		select distinct school_name schoolName
			from h_school
			where school_name like '%'||#{schoolName}||'%'
  	</select>
  	
  	<select id="findUSchool" parameterType="String" resultType="String">
  		select distinct name schoolName
			from u_school
			where name like '%'||#{schoolName}||'%'
  	</select>  
  	<insert id="writeArticle" parameterType="boardDto">
	insert 
		into board (BOARD_NO, B_USER_ID, BOARD_CATEGORY, USER_NAME, BOARD_SUBJECT, BOARD_CONTENT, B_SCHOOL_NAME, B_SCHOOL_CODE,
		B_SCHOOL_CATE1, B_SCHOOL_CATE2, REGION, B_VIEW_COUNT, DEL_STUS, STATE, B_POSTDATE )
		values(#{boardNo}, #{bUserId}, 1, #{userName}, #{boardSubject}, #{boardContent}, #{bSchoolName}, null, null, null, #{region},  0, 0, 0, sysdate)
	</insert>
	
	<!-- <select id="listArticle" parameterType="map" resultType="BoardDto">
	select c.bcode, c.content, c.email, c.id, 
   		 decode(to_char(c.logtime,'yymmdd'),
	            to_char(sysdate,'yymmdd'), to_char(sysdate,'hh:mi:ss'),
	            to_char(c.logtime,'yy.mm.dd')) logtime,
        c.name, c.seq, c.subject, c.lev, c.pseq, c.ref, c.reply, c.rseq, c.step, c.hit
	from(
	    select rownum r, total.*
	    from(
	        select b.bcode, b.content, b.email, b.id, b.logtime, b.name, b.seq, b.subject, 
	            r.lev, r.pseq, r.ref, r.reply, r.rseq, r.step, b.hit
	            from board b, reboard r
	            where b.seq = r.seq
	            and b.bcode = #{bcode}
	            <if test="word != null and word != ''" >
	            	<if test="key == 'subject'">
	            	and b.subject like '%'||#{word}||'%'
	            	</if>
	            	<if test="key != 'subject'">
	            	and b.${key} = #{word}
	            	</if>
	            </if>
	            order by ref DESC, step
	            ) total
	    where rownum &lt;= #{end}
	    ) c
	where c.r &gt; #{start}
	</select> -->
	
	
</mapper>